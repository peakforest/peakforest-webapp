<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<annotation-driven />
	<security:global-method-security
		secured-annotations="enabled" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven conversion-service="conversionService" -->
	<!-- enableMatrixVariables="true"> -->
	<!-- <argument-resolvers> -->
	<!-- <beans:bean -->
	<!-- class="fr.metabohub.peakforest.mvc.data.custom.CustomArgumentResolver" 
		/> -->
	<!-- </argument-resolvers> -->
	<!-- <async-support default-timeout="3000"> -->
	<!-- <callable-interceptors> -->
	<!-- <beans:bean -->
	<!-- class="fr.metabohub.peakforest.mvc.async.TimeoutCallableProcessingInterceptor" 
		/> -->
	<!-- </callable-interceptors> -->
	<!-- </async-support> -->
	<!-- </annotation-driven> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Only needed because we install custom converters to support the examples 
		in the org.springframewok.samples.mvc.convert package -->
	<!-- <beans:bean id="conversionService" -->
	<!-- class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> -->
	<!-- <beans:property name="formatters"> -->
	<!-- <beans:bean -->
	<!-- class="fr.metabohub.peakforest.mvc.convert.MaskFormatAnnotationFormatterFactory" 
		/> -->
	<!-- </beans:property> -->
	<!-- </beans:bean> -->

	<!-- Only needed because we require fileupload in the fr.metabohub.peakforest.mvc.fileupload 
		package -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />

	<task:annotation-driven />

	<!-- Properties loader -->
	<beans:bean id="properties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location"
			value="/resources/conf/email-conf.properties" />
	</beans:bean>

	<!-- Business bean -->
	<beans:bean id="emailManager" class="fr.metabohub.peakforest.utils.EmailManager">
		<beans:constructor-arg type="java.lang.String"
			value="${email.host}" />
		<beans:constructor-arg type="boolean"
			value="${email.authenticate}" />
		<beans:constructor-arg type="java.lang.String"
			value="${email.username}" />
		<beans:constructor-arg type="java.lang.String"
			value="${email.password}" />
		<beans:property name="from" value="${email.from}" />
		<beans:property name="messageBCC1" value="${email.bcc1}" />
		<beans:property name="messageBCC2" value="${email.bcc2}" />
		<beans:property name="messageSource" ref="messageSource" />
	</beans:bean>

	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<beans:bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<beans:property name="paramName" value="language" />
		</beans:bean>
	</mvc:interceptors>
	<!-- Saves a locale change using the session or cookie -->
	<!-- <beans:bean id="localeResolver" -->
	<!-- class="org.springframework.web.servlet.i18n.SessionLocaleResolver"> -->
	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="defaultLocale" value="en" />
		<beans:property name="cookieName" value="userLang" />
		<beans:property name="cookieMaxAge" value="604800" />
	</beans:bean>
	<!-- Application Message Bundle -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- <beans:property name="basename" value="classpath:messages/messages" 
			/> -->
		<beans:property name="basename" value="/resources/messages/messages" />
		<beans:property name="cacheSeconds" value="0" />
		<beans:property name="fileEncodings" value="UTF-8" />
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>

</beans:beans>